swagger: '2.0'
info:
  title: Hotel Reservation System API
  version: 1.0.0
servers:
  - url: http://127.0.0.1:5000/api
paths:
  /users/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                role:
                  type: string
              required:
                - username
                - password
                - role
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  mensaje:
                    type: string
        '400':
          description: Missing data
        '500':
          description: Error registering user

  /users/login:
    post:
      summary: Login a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
        '401':
          description: Invalid credentials

  /users:
    get:
      summary: Get list of users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    user_id:
                      type: integer
                    username:
                      type: string
                    role:
                      type: string

  /users/{user_id}:
    get:
      summary: Get user details
      security:
        - bearerAuth: []
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: User details
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: integer
                  username:
                    type: string
                  role:
                    type: string
        '404':
          description: User not found

    put:
      summary: Update user details
      security:
        - bearerAuth: []
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                role:
                  type: string
              required:
                - username
                - password
                - role
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: User not found

    delete:
      summary: Delete a user
      security:
        - bearerAuth: []
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: User deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: User not found

  /rooms:
    post:
      summary: Create a new room
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                room_number:
                  type: string
                room_type:
                  type: string
                availability:
                  type: boolean
              required:
                - room_number
                - room_type
      responses:
        '201':
          description: Room created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Invalid input

    get:
      summary: Get list of rooms
      responses:
        '200':
          description: List of rooms
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    room_id:
                      type: integer
                    room_number:
                      type: string
                    room_type:
                      type: string
                    availability:
                      type: boolean

  /rooms/{room_id}:
    get:
      summary: Get room details
      parameters:
        - name: room_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Room details
          content:
            application/json:
              schema:
                type: object
                properties:
                  room_id:
                    type: integer
                  room_number:
                    type: string
                  room_type:
                    type: string
                  availability:
                    type: boolean
        '404':
          description: Room not found

    put:
      summary: Update room details
      parameters:
        - name: room_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                room_number:
                  type: string
                room_type:
                  type: string
                availability:
                  type: boolean
              required:
                - room_number
                - room_type
      responses:
        '200':
          description: Room updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: Room not found

    delete:
      summary: Delete a room
      parameters:
        - name: room_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Room deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: Room not found

  /accounts:
    post:
      summary: Create a new account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                account_name:
                  type: string
                account_type:
                  type: string
              required:
                - account_name
                - account_type
      responses:
        '201':
          description: Account created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Invalid input

    get:
      summary: Get list of accounts
      responses:
        '200':
          description: List of accounts
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    account_id:
                      type: integer
                    account_name:
                      type: string
                    account_type:
                      type: string

  /accounts/{account_id}:
    get:
      summary: Get account details
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Account details
          content:
            application/json:
              schema:
                type: object
                properties:
                  account_id:
                    type: integer
                  account_name:
                    type: string
                  account_type:
                    type: string
        '404':
          description: Account not found

    put:
      summary: Update account details
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                account_name:
                  type: string
                account_type:
                  type: string
              required:
                - account_name
                - account_type
      responses:
        '200':
          description: Account updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: Account not found

    delete:
      summary: Delete an account
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Account deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: Account not found

  /reservations:
    post:
      summary: Create a new reservation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                client_id:
                  type: integer
                room_id:
                  type: integer
                check_in:
                  type: string
                  format: date
                check_out:
                  type: string
                  format: date
                status:
                  type: string
              required:
                - client_id
                - room_id
                - check_in
                - check_out
      responses:
        '201':
          description: Reservation created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Invalid input

    get:
      summary: Get list of reservations
      responses:
        '200':
          description: List of reservations
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    reservation_id:
                      type: integer
                    client_id:
                      type: integer
                    room_id:
                      type: integer
                    check_in:
                      type: string
                      format: date
                    check_out:
                      type: string
                      format: date
                    status:
                      type: string

  /reservations/{reservation_id}:
    get:
      summary: Get reservation details
      parameters:
        - name: reservation_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Reservation details
          content:
            application/json:
              schema:
                type: object
                properties:
                  reservation_id:
                    type: integer
                  client_id:
                    type: integer
                  room_id:
                    type: integer
                  check_in:
                    type: string
                    format: date
                  check_out:
                    type: string
                    format: date
                  status:
                    type: string
        '404':
          description: Reservation not found

    put:
      summary: Update reservation details
      parameters:
        - name: reservation_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                client_id:
                  type: integer
                room_id:
                  type: integer
                check_in:
                  type: string
                  format: date
                check_out:
                  type: string
                  format: date
                status:
                  type: string
              required:
                - client_id
                - room_id
                - check_in
                - check_out
      responses:
        '200':
          description: Reservation updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: Reservation not found

    delete:
      summary: Delete a reservation
      parameters:
        - name: reservation_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Reservation deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: Reservation not found

  /reports:
    post:
      summary: Create a new report
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                report_name:
                  type: string
                report_data:
                  type: string
              required:
                - report_name
                - report_data
      responses:
        '201':
          description: Report created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Invalid input

    get:
      summary: Get list of reports
      responses:
        '200':
          description: List of reports
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    report_id:
                      type: integer
                    report_name:
                      type: string
                    report_data:
                      type: string
                    generated_at:
                      type: string
                      format: date-time

  /reports/{report_id}:
    get:
      summary: Get report details
      parameters:
        - name: report_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Report details
          content:
            application/json:
              schema:
                type: object
                properties:
                  report_id:
                    type: integer
                  report_name:
                    type: string
                  report_data:
                    type: string
                  generated_at:
                    type: string
                    format: date-time
        '404':
          description: Report not found

    put:
      summary: Update report details
      parameters:
        - name: report_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                report_name:
                  type: string
                report_data:
                  type: string
              required:
                - report_name
                - report_data
      responses:
        '200':
          description: Report updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: Report not found

    delete:
      summary: Delete a report
      parameters:
        - name: report_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Report deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: Report not found

  /invoices:
    post:
      summary: Create a new invoice
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reservation_id:
                  type: integer
                issue_date:
                  type: string
                  format: date
                total_amount:
                  type: number
                  format: float
                tax_amount:
                  type: number
                  format: float
                payment_method:
                  type: string
              required:
                - reservation_id
                - issue_date
                - total_amount
                - tax_amount
                - payment_method
      responses:
        '201':
          description: Invoice created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Invalid input

    get:
      summary: Get list of invoices
      responses:
        '200':
          description: List of invoices
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    invoice_id:
                      type: integer
                    reservation_id:
                      type: integer
                    issue_date:
                      type: string
                      format: date
                    total_amount:
                      type: number
                      format: float
                    tax_amount:
                      type: number
                      format: float
                    payment_method:
                      type: string

  /invoices/{invoice_id}:
    get:
      summary: Get invoice details
      parameters:
        - name: invoice_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Invoice details
          content:
            application/json:
              schema:
                type: object
                properties:
                  invoice_id:
                    type: integer
                  reservation_id:
                    type: integer
                  issue_date:
                    type: string
                    format: date
                  total_amount:
                    type: number
                    format: float
                  tax_amount:
                    type: number
                    format: float
                  payment_method:
                    type: string
        '404':
          description: Invoice not found

    put:
      summary: Update invoice details
      parameters:
        - name: invoice_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reservation_id:
                  type: integer
                issue_date:
                  type: string
                  format: date
                total_amount:
                  type: number
                  format: float
                tax_amount:
                  type: number
                  format: float
                payment_method:
                  type: string
              required:
                - reservation_id
                - issue_date
                - total_amount
                - tax_amount
                - payment_method
      responses:
        '200':
          description: Invoice updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: Invoice not found

    delete:
      summary: Delete an invoice
      parameters:
        - name: invoice_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Invoice deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: Invoice not found
  /financial_records:
    post:
      summary: Create a new financial record
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                record_type:
                  type: string
                amount:
                  type: number
                  format: float
                description:
                  type: string
                record_date:
                  type: string
                  format: date
              required:
                - record_type
                - amount
                - record_date
      responses:
        '201':
          description: Financial record created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Invalid input

    get:
      summary: Get list of financial records
      responses:
        '200':
          description: List of financial records
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    record_id:
                      type: integer
                    record_type:
                      type: string
                    amount:
                      type: number
                      format: float
                    description:
                      type: string
                    record_date:
                      type: string
                      format: date

  /financial_records/{record_id}:
    get:
      summary: Get financial record details
      parameters:
        - name: record_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Financial record details
          content:
            application/json:
              schema:
                type: object
                properties:
                  record_id:
                    type: integer
                  record_type:
                    type: string
                  amount:
                    type: number
                    format: float
                  description:
                    type: string
                  record_date:
                    type: string
                    format: date
        '404':
          description: Financial record not found

    put:
      summary: Update financial record details
      parameters:
        - name: record_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                record_type:
                  type: string
                amount:
                  type: number
                  format: float
                description:
                  type: string
                record_date:
                  type: string
                  format: date
              required:
                - record_type
                - amount
                - record_date
      responses:
        '200':
          description: Financial record updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: Financial record not found

    delete:
      summary: Delete a financial record
      parameters:
        - name: record_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Financial record deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: Financial record not found

  /clients:
    post:
      summary: Create a new client
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                address:
                  type: string
                phone:
                  type: string
                email:
                  type: string
                room_preferences:
                  type: string
                special_requirements:
                  type: string
              required:
                - name
      responses:
        '201':
          description: Client created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Invalid input

    get:
      summary: Get list of clients
      responses:
        '200':
          description: List of clients
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    client_id:
                      type: integer
                    name:
                      type: string
                    address:
                      type: string
                    phone:
                      type: string
                    email:
                      type: string
                    room_preferences:
                      type: string
                    special_requirements:
                      type: string

  /clients/{client_id}:
    get:
      summary: Get client details
      parameters:
        - name: client_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Client details
          content:
            application/json:
              schema:
                type: object
                properties:
                  client_id:
                    type: integer
                  name:
                    type: string
                  address:
                    type: string
                  phone:
                    type: string
                  email:
                    type: string
                  room_preferences:
                    type: string
                  special_requirements:
                    type: string
        '404':
          description: Client not found

    put:
      summary: Update client details
      parameters:
        - name: client_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                address:
                  type: string
                phone:
                  type: string
                email:
                  type: string
                room_preferences:
                  type: string
                special_requirements:
                  type: string
              required:
                - name
      responses:
        '200':
          description: Client updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: Client not found

    delete:
      summary: Delete a client
      parameters:
        - name: client_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Client deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: Client not found

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT